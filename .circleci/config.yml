#Comment to trigger fresh commit
version: 2.1

orbs:
  swissknife: roopakv/swissknife@0.29.0

#parameters:
  # By default we enable the main workflow
#  trigger:
#    type: boolean
#    default: true

  # Add a boolean parameter on each package.
#  core:
#    type: boolean
#    default: false
#  components:
#    type: boolean
#    default: false

executors:
  node:
    docker:
      - image: 'circleci/node:latest'

jobs:
  trigger-workflows:
    executor: node
    steps:
      - checkout
      - swissknife/trigger_pipeline_if_modified:
          always-trigger-on-branch: master
          custom-parameters: '{"trigger": false, "core": true, "components": false}'
          pattern: ^(directory|\packages\components\lib).*
          use-divergence-point: true
#          job-name: 
#      - run: yarn --frozen-lockfile
#      - run:
#          name: Trigger workflows
#          command: node ./circleci.js

  new_version:
    executor: node
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - 'e4:2e:3b:f4:6a:06:31:5a:37:d7:db:c6:2c:12:3e:ed'
      - run: git config user.email "brian_o_halloran@hotmail.com" && git config user.name "brianoh1979"
      - run: yarn bump:version

  lint:
    parameters:
      package_name:
        type: string
    executor: node
    steps:
      - run:
          name: Running linter on << parameters.package_name >>
          command: echo << parameters.package_name >> lint

  test:
    parameters:
      package_name:
        type: string
    executor: node
    steps:
      - run:
          name: Running linter on << parameters.package_name >>
          command: echo << parameters.package_name >> lint

workflows:
  version: 2

  # The main workflow will trigger other workflow based on your changes
  trigger:
 #   when: << pipeline.parameters.trigger >>
    jobs:
      - trigger-workflows
      - new_version:
          requires:
            - trigger-workflows
          filters:
            branches:
              only:
                - master

  # Workflows defined for each package.
  core:
 #   when: << pipeline.parameters.core >>
    jobs:
      - lint:
          package_name: core

  components:
 #   when: << pipeline.parameters.components >>
    jobs:
      - test:
          package_name: components
      - lint:
          package_name: components
